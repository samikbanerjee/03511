/**
 *
 */
package jira.reports;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;

import com.sun.codemodel.JClassAlreadyExistsException;
import com.sun.codemodel.JCodeModel;
import com.sun.codemodel.JDefinedClass;
import com.sun.codemodel.JExpr;
import com.sun.codemodel.JFieldVar;
import com.sun.codemodel.JMethod;
import com.sun.codemodel.JMod;


/**
 *
 */
public class Fun
{

	/**
	 * @param args
	 * @throws JClassAlreadyExistsException
	 * @throws IOException
	 */
	public static void main(final String[] args) throws JClassAlreadyExistsException, IOException
	{
		final String clNm = "CityModel";

		final Map<String, Class<?>> hm = new HashMap<String, Class<?>>();
		hm.put("ID", int.class);
		hm.put("name", String.class);

		generateModelClass(clNm, hm);


		System.out.println("DONE");
	}

	/**
	 * @param className
	 * @param hm
	 * @throws JClassAlreadyExistsException
	 * @throws IOException
	 */
	public static void generateModelClass(final String className, final Map<String, Class<?>> hm)
			throws JClassAlreadyExistsException, IOException
	{
		final JCodeModel cm = new JCodeModel();
		final JDefinedClass dc = cm._class("jira.models." + className);
		dc.javadoc().add("Autogenerated class " + className);

		for (final Entry<String, Class<?>> m : hm.entrySet())
		{
			final String fieldName = m.getKey();
			final Class<?> fieldType = m.getValue();


			final JFieldVar varField = dc.field(JMod.PRIVATE, fieldType, fieldName);

			final JMethod getField = dc.method(JMod.PUBLIC, varField.type(), "get" + varField.name());
			getField.body()._return(varField);
			getField.javadoc().addReturn().add(varField.name());


			final JMethod setField = dc.method(JMod.PUBLIC, void.class, "set" + varField.name());
			setField.param(varField.type(), varField.name());
			setField.body().assign(JExpr._this().ref(varField.name()), JExpr.ref(varField.name()));
			setField.javadoc().addParam(varField.name());
		}


		final File file = new File(System.getProperty("user.dir") + "/src/main/java/");
		file.mkdirs();
		cm.build(file);
	}
}
